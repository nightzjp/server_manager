"""
Django settings for server_manager project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

sys.path.insert(0, os.path.join(BASE_DIR, "apps"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-(o&h0nqj+)740=2eh9strg^3s!_j%b)ej*$n9w3=02)+(_%!-$"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    "corsheaders",
    "simplepro",
    "simpleui",
    "import_export",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "django_filters",
    "public",
    "device",
    "system",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "simplepro.middlewares.SimpleMiddleware",
]

ROOT_URLCONF = "server_manager.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "server_manager.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = "zh-hans"

TIME_ZONE = "Asia/Shanghai"

USE_I18N = True

USE_L10N = True

USE_TZ = False

STATIC_ROOT = BASE_DIR / "static"

STATICFILES_DIRS = [os.path.join(BASE_DIR, "templates/static")]

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "static/media")


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = "static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# RABBITMQ_CONFIG
RABBITMQ_USERNAME = os.getenv("RABBITMQ_USERNAME", "admin")
RABBITMQ_PASSWORD = os.getenv("RABBITMQ_PASSWORD", "admin")
RABBITMQ_HOST = os.getenv("RABBITMQ_HOST", "127.0.0.1")
RABBITMQ_PORT = os.getenv("RABBITMQ_PORT", 5672)

# SIMPLE_CONFIG
SIMPLEUI_HOME_INFO = False

SIMPLEUI_ANALYSIS = False

SIMPLEUI_STATIC_OFFLINE = True

SIMPLEPRO_MONIT_DISPLAY = True

SIMPLEPRO_INFO = False

SIMPLEPRO_CHART_DISPLAY = True

SIMPLEUI_HOME_QUICK = True

SIMPLEUI_CONFIG = {
    "system_keep": False,
    "dynamic": False,
    "menus": [
        {"name": "算法模型", "icon": "fas fa-brain", "url": "/admin/device/algorithm/"},
        {"name": "视频源", "icon": "fas fa-video", "url": "/admin/device/device/"},
        {
            "name": "系统配置",
            "icon": "fas fa-tools",
            "models": [
                {
                    "name": "网络配置",
                    "icon": "fas fa-ethernet",
                    "url": "/admin/system/networkconfig/",
                },
                {
                    "name": "Mqtt配置",
                    "icon": "fas fa-project-diagram",
                    "url": "/admin/system/mqttconfig/",
                },
                {
                    "name": "HTTP配置",
                    "icon": "fas fa-project-diagram",
                    "url": "/admin/system/httpconfig/",
                },
                {
                    "name": "程序升级",
                    "icon": "fas fa-level-up-alt",
                    "url": "/custom/upload/",
                },
            ],
        },
        {
            "name": "系统管理",
            "icon": "fas fa-user-shield",
            "models": [
                {
                    "name": "用户管理",
                    "icon": "fa fa-user",
                    "url": "/admin/system/userproxy/",
                },
                {
                    "name": "设备信息",
                    "icon": "fas fa-cogs",
                    "url": "/admin/system/systeminfo/",
                },
                {
                    "name": "异步任务",
                    "icon": "fas fa-user-shield",
                    "models": [
                        {
                            "name": "时钟",
                            "icon": "fa fa-clock",
                            "url": "/admin/django_celery_beat/clockedschedule/",
                        },
                        {
                            "name": "crontab",
                            "icon": "fa fa-user-clock",
                            "url": "/admin/django_celery_beat/crontabschedule/",
                        },
                        {
                            "name": "间隔",
                            "icon": "fa fa-stop",
                            "url": "/admin/django_celery_beat/intervalschedule/",
                        },
                        {
                            "name": "周期任务",
                            "icon": "fa fa-business-time",
                            "url": "/admin/django_celery_beat/periodictask/",
                        },
                        {
                            "name": "事件",
                            "icon": "fa fa-solar-panel",
                            "url": "/admin/django_celery_beat/solarschedule/",
                        },
                    ],
                },
            ],
        },
        {
            "name": "日志报警",
            "icon": "fa fa-exclamation",
            "models": [
                {
                    "name": "系统日志",
                    "icon": "far fa-bookmark",
                    "url": "/admin/admin/logentry/",
                },
                {
                    "name": "报警日志",
                    "icon": "far fa-bookmark",
                    "url": "",
                },
            ],
        },
    ],
}

# DJANGO_REST_FRAMEWORK_CONFIG
REST_FRAMEWORK = {
    "DEFAULT_PAGINATION_CLASS": "utils.pagination.CustomLimitOffsetPagination",
    "PAGE_SIZE": 10,
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework.authentication.BasicAuthentication"
    ],
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.IsAuthenticated"],
    "DEFAULT_FILTER_BACKENDS": [
        "django_filters.rest_framework.DjangoFilterBackend",
        "rest_framework.filters.SearchFilter",
        "rest_framework.filters.OrderingFilter",
    ],
    "EXCEPTION_HANDLER": "utils.exception_handler.custom_exception_handler",
    "DEFAULT_SCHEMA_CLASS": "rest_framework.schemas.AutoSchema",
}

if DEBUG is False:
    REST_FRAMEWORK["DEFAULT_RENDERER_CLASSES"] = [
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
    ]


APPEND_SLASH = False  # 校验路由最后一个斜杠
